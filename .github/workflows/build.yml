name: Build and Push Container to ECR

on:
  # push:
  #  branches: [main]
  pull_request:
    paths:
      - "lambdas/**"
      - ".github/workflows/**"  

env:
  GITHUB_SHA: ${{ github.sha }}
  REGISTRY: public.ecr.aws/cds-snc
  REPO_NAME : siem-

jobs:
  build-and-push:
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: "ip-geolocation"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            lambda:
              - 'lambdas/${{ matrix.image }}/**'

      - name: Build container
        if: ${{ steps.filter.outputs.lambda == 'true' }}
        working-directory: ./lambdas/${{ matrix.image }}
        run: |
          docker build \
          -t $REGISTRY/$REPO_NAME-${{ matrix.image }}:$GITHUB_SHA \
          -t $REGISTRY/$REPO_NAME-${{ matrix.image }}:latest . 

      - name: AWS auth with ECR
        if: ${{ steps.filter.outputs.lambda == 'true' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ECR_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_ACCESS_KEY }}
        run: |
          aws ecr-public get-login-password --region us-east-1 > /tmp/aws
          cat /tmp/aws | docker login --username AWS --password-stdin $REGISTRY
          rm /tmp/aws

      - name: Push containers to ECR
        if: ${{ steps.filter.outputs.lambda == 'true' }}
        run: |
          docker push $REGISTRY/$REPO_NAME-${{ matrix.image }}:$GITHUB_SHA
          docker push $REGISTRY/$REPO_NAME-${{ matrix.image }}:latest

      - name: Logout of Amazon ECR
        if: ${{ steps.filter.outputs.lambda == 'true' }}
        run: docker logout ${{ steps.login-ecr.outputs.registry }}